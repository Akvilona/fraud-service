openapi: 3.0.2
components:
  schemas:
    FraudUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: userName
        email:
          type: string
          example: example@mail.ru
      required:
        - name
        - email
info:
  title: fraud user app
  description: fraud user app description
  termsOfService: 'https://editor.swagger.io/ or https://editor-next.swagger.io/'
  contact:
    email: example@gmail.com
    url: 'https://editor-next.swagger.io/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 0.0.1-SNAPSHOT
externalDocs:
  description: Find out more about swagger
  url: 'https://swagger.io/specification/'
servers:
  - url: 'http://localhost:8080'
tags:
  - name: Fraud User
    description: Operations about Fraud user
    externalDocs:
      description: Find out more about our store
      url: 'https://editor-next.swagger.io/'
paths:
  '/users/{id}':
    delete:
      tags:
        - Fraud User
      summary: Delete Fraud User by ID
      operationId: deleteFraudUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: id of the Fraud User
      responses:
        '200':
          description: Successful operation
  /users:
    get:
      tags:
        - Fraud User
      summary: Check Fraud User by email number
      operationId: checkFraudUserByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: email number of the Fraud User
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: boolean
    post:
      tags:
        - Fraud User
      summary: Add Fraud User to base
      operationId: postFraudUserById
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudUser'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudUser'
